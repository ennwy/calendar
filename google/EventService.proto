syntax = "proto3";

package event;

import "google/protobuf/timestamp.proto";
//import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "/";

message User {
    string Name = 1;
    int64  ID = 2;
}

message Event {
    int64 ID = 1;
    User Owner = 2;
    string Title = 3;
    google.protobuf.Timestamp Start = 4;
    google.protobuf.Timestamp Finish = 5;
    int32 Notify = 6;
}

message Events {
    repeated Event Events = 1;
}

message Upcoming {
    enum Period {
        Day = 0;
        Week = 1;
        Month = 2;
    }

    User Owner = 1;
    Period Until = 2;

}

service Storage {
    rpc CreateEvent(Event) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/create/{Owner.Name}/{Title}/{Start}/{Finish}/{Notify}"
        };
    }

    rpc ListEvents(User) returns (Events) {
        option (google.api.http) = {
            get: "/list/{Name}"
        };
    }

    rpc ListUpcoming(Upcoming) returns (Events) {
        option (google.api.http) = {
            get: "/list/{Owner.Name}/{Until}"
        };
    }

    rpc UpdateEvent(Event) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/update/{ID}/{Title}/{Start}/{Finish}/{Notify}"
        };
    }

    rpc DeleteEvent(Event) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/delete/{ID}"
        };
    }
}