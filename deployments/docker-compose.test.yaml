version: '3.9'

services:
  integration-tests:
    container_name: "integration-tests"
    build:
      context: ..
      dockerfile: ./build/Dockerfile_tests
    depends_on:
      - calendar
      - scheduler
      - sender
    environment:
    - API_HOST=${API_HOST}

    - LOG_LEVEL=${LOG_LEVEL}
    - LOG_OUTPUT_PATH=${LOG_OUTPUT_PATH}

    - GRPC_HOST=${GRPC_HOST}
    - GRPC_PORT=${GRPC_PORT}

    - HTTP_HOST=${HTTP_HOST}
    - HTTP_PORT=${HTTP_PORT}

    - STORAGE=${STORAGE}

    - DATABASE_USER=${DB_USER}
    - DATABASE_PASSWORD=${DB_PASSWORD}
    - DATABASE_NAME=${DB_NAME}
    - DATABASE_HOST=${DB_HOST}
    - DATABASE_PORT=${DB_PORT}

    - MQ_Q_NAME=${MQ_Q_NAME}
    - MQ_URL=${MQ_URL}
    - MQ_MANDATORY=${MQ_MANDATORY}
    - MQ_IMMEDIATE=${MQ_IMMEDIATE}
    - MQ_DURABLE=${MQ_DURABLE}
    - MQ_AUTO_DELETE=${MQ_AUTO_DELETE}
    - MQ_EXCLUSIVE=${MQ_EXCLUSIVE}
    - MQ_NO_WAIT=${MQ_NO_WAIT}


  calendar:
    container_name: "calendar"
    build:
      context: ..
      dockerfile: ./build/Dockerfile_calendar
      args:
        - cmd=cmd_tests
    restart: on-failure
    depends_on:
      - migrate
    environment:
      - SERVER_TYPE=${SERVER_TYPE}

      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_OUTPUT_PATH=${LOG_OUTPUT_PATH}

      - GRPC_HOST=${GRPC_HOST}
      - GRPC_PORT=${GRPC_PORT}

      - HTTP_HOST=${HTTP_HOST}
      - HTTP_PORT=${HTTP_PORT}

      - STORAGE=${STORAGE}

      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
      - "${HTTP_PORT}:${HTTP_PORT}"



  scheduler:
    container_name: "scheduler"
    build:
      context: ..
      dockerfile: ./build/Dockerfile_scheduler
      args:
        - cmd=cmd_tests
    restart: on-failure
    depends_on:
      - migrate
      - rabbitmq
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_OUTPUT_PATH=${LOG_OUTPUT_PATH}

      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}

      - MQ_Q_NAME=${MQ_Q_NAME}
      - MQ_URL=${MQ_URL}
      - MQ_MANDATORY=${MQ_MANDATORY}
      - MQ_IMMEDIATE=${MQ_IMMEDIATE}
      - MQ_DURABLE=${MQ_DURABLE}
      - MQ_AUTO_DELETE=${MQ_AUTO_DELETE}
      - MQ_EXCLUSIVE=${MQ_EXCLUSIVE}
      - MQ_NO_WAIT=${MQ_NO_WAIT}


  sender:
    container_name: "sender"
    build:
      context: ..
      dockerfile: ./build/Dockerfile_sender
      args:
        - cmd=cmd_tests
    restart: on-failure
    depends_on:
      - rabbitmq
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_OUTPUT_PATH=${LOG_OUTPUT_PATH}

      - MQ_Q_NAME=${MQ_Q_NAME}
      - MQ_URL=${MQ_URL}
      - MQ_CONSUMER=${MQ_CONSUMER}
      - MQ_AUTO_ACK=${MQ_AUTO_ACK}
      - MQ_EXCLUSIVE=${MQ_EXCLUSIVE}
      - MQ_NO_LOCAL=${MQ_NO_LOCAL}
      - MQ_NO_WAIT=${MQ_NO_WAIT}

  rabbitmq:
    container_name: "rabbitmq"
    restart: on-failure
    image: rabbitmq:3.11.3-management-alpine
    hostname: ${API_HOST}
    expose:
      - "15672:15672"
      - "5672:5672"

  db:
    container_name: "postgres"
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    ports:
      - "5432:5432"

  migrate:
    container_name: "migrate"
    build:
      context: ../
      dockerfile: ./build/Dockerfile_migrate
    restart: on-failure
    image: migrate/migrate
    command: [
      /opt/migrate/goose, postgres,
      "host=${DB_HOST} password=${DB_PASSWORD} \
      port=${DB_PORT} user=${DB_USER} \
      dbname=${DB_NAME} sslmode=disable",
      up
    ]
    depends_on:
      - db